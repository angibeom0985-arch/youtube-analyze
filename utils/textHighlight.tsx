// 텍스트 강조를 위한 유틸리티 함수
// 중요 키워드와 문맥 기반으로 밑줄 추가

export const highlightImportantText = (text: string): string => {
  if (!text) return '';
  
  // 기본 중요 키워드들
  const basicKeywords = [
    // 목표/타겟 관련
    '목표 시청자', '목표시청자', '핵심 메시지', '핵심메시지',
    '기대 효과', '기대효과', '타겟 층', '타겟층', '주 시청자층',
    '대상', '타깃', '겨냥',
    
    // 감정/효과 관련
    '감정적 연결', '감정 유발', '공감대', '공감', '감정',
    '흥미 유발', '흥미', '호기심', '궁금증',
    '몰입감', '몰입도', '집중력', '관심', '이목',
    '재미', '즐거움', '만족감', '몰입', '빠져들게',
    
    // 구조/전략 관련
    '콘텐츠 구조', '영상 구조', '스토리텔링', '구성', '배치',
    '시선 끌기', '주목도', '문제 제기', '해결책', '솔루션',
    '클라이맥스', '반전', '도입부', '전개부', '결말', '마무리',
    '전개', '흐름', '구성요소', '단계',
    
    // 중요도 표시
    '중요한', '핵심적인', '필수적인', '결정적인', '필수',
    '주요 요소', '핵심 요소', '핵심 포인트', '주요 포인트',
    '핵심 내용', '중요 내용', '주요 내용', '핵심',
    '가장 중요한', '최우선', '우선순위',
    
    // 특징/강점
    '특징', '장점', '강점', '차별점', '독창성', '참신함', '강력한',
    '뛰어난', '훌륭한', '우수한', '탁월한', '뚜렷한',
    
    // 전략/기법
    '전략', '기법', '방법론', '테크닉', '구성 방식', '접근법',
    '방법', '노하우', '비법', '팁',
    
    // 효과/결과
    '효과적', '효과', '성공 요인', '핵심 전략', '성과',
    '조회수', '참여도', '클릭률', '구독', '좋아요', '반응률',
    '성공', '성공적', '효율', '효율적', '최적',
    '바이럴', '화제성', '인기',
    
    // 콘텐츠 요소
    '썸네일', '제목', '키워드', '해시태그', '태그',
    '편집', '연출', '촬영', '구도', '화면',
    
    // 시청자 반응
    '시청자 반응', '시청 유지율', '시청 시간', '재생 시간',
    '시청 완료율', '이탈률', '유입', '유지',
    '댓글', '공유', '저장', '재생',
    
    // 성질 표현
    '신뢰성', '전문성', '독창성', '일관성', '효율성',
    '현실성', '구체성', '명확성', '적절성', '실용성', '완성도',
    '진정성', '신선함', '매력', '품질',
    
    // 추가 중요 표현
    '시청자층', '정보 전달', '엔터테인먼트', '교육적 가치',
    '스토리 구성', '영상 편집', '자막 활용', '음악 선택',
    '분위기', '템포', '리듬', '긴장감', '이완',
    '배경음악', 'BGM', '효과음', '자막',
    
    // 가치/의미
    '가치 제공', '가치', '의미', '중요성', '영향력', '파급력',
    '도움', '유익', '실질적', '실용적',
    
    // 차별화/독특함
    '차별화', '독특한', '새로운', '혁신적인', '창의적인',
    '참신한', '신선한', '색다른', '차별화된',
    
    // 연결/관계
    '연결', '관계', '상호작용', '소통', '교감',
    '유대감', '친밀감', '신뢰',
    
    // 분석 관련
    '분석', '인사이트', '패턴', '트렌드',
    '데이터', '지표', '수치', '통계',
    
    // 예측/전망
    '예상', '예측', '전망', '가능성',
    '잠재력', '가능성', '성장',
    
    // 행동 유도
    '유도', '촉진', '유발', '자극',
    '끌어당김', '몰입', '참여',
  ];
  
  // 문맥 기반 패턴 (앞뒤 문맥과 함께 강조)
  const contextPatterns = [
    // "~를 통해", "~을 통해" 패턴
    /([가-힣\s]{2,15})[을를]\s*통해/g,
    
    // "~하여" 패턴 (행동/방법)
    /([가-힣\s]{2,15})하여/g,
    
    // "~함으로써" 패턴
    /([가-힣\s]{2,15})함으로써/g,
    
    // "~한 점" 패턴 (특징/장점)
    /([가-힣\s]{2,15})한\s*점/g,
    
    // "~적인" 패턴
    /([가-힣]{2,10})적인/g,
    
    // "~의 중요성" 패턴
    /([가-힣\s]{2,15})의\s*중요성/g,
    
    // "~을 강조" 패턴
    /([가-힣\s]{2,15})[을를]\s*강조/g,
    
    // "~을 활용" 패턴
    /([가-힣\s]{2,15})[을를]\s*활용/g,
    
    // "~에 초점" 패턴
    /([가-힣\s]{2,15})에\s*초점/g,
    
    // "~를 제공" 패턴
    /([가-힣\s]{2,15})[을를]\s*제공/g,
    
    // "~를 유도" 패턴
    /([가-힣\s]{2,15})[을를]\s*유도/g,
    
    // "~를 극대화" 패턴
    /([가-힣\s]{2,15})[을를]\s*극대화/g,
    
    // "~가 두드러진다" 패턴
    /([가-힣\s]{2,20})가\s*두드러진다/g,
    
    // "~이 돋보인다" 패턴
    /([가-힣\s]{2,20})[이가]\s*돋보인다/g,
    
    // "~에 집중" 패턴
    /([가-힣\s]{2,15})에\s*집중/g,
    
    // "~을 보여준다" 패턴
    /([가-힣\s]{2,20})[을를]\s*보여준다/g,
    
    // "~이 특징이다" 패턴
    /([가-힣\s]{2,20})[이가]\s*특징이다/g,
    
    // "~의 핵심" 패턴
    /([가-힣\s]{2,15})의\s*핵심/g,
    
    // "~의 포인트" 패턴
    /([가-힣\s]{2,15})의\s*포인트/g,
    
    // "~의 장점" 패턴
    /([가-힣\s]{2,15})의\s*장점/g,
    
    // "~의 효과" 패턴
    /([가-힣\s]{2,15})의\s*효과/g,
    
    // 따옴표로 묶인 중요 내용
    /"([^"]{3,50})"/g,
    
    // 괄호로 묶인 부연 설명
    /\(([^)]{3,30})\)/g,
    
    // "~에 성공" 패턴
    /([가-힣\s]{2,15})에\s*성공/g,
    
    // "~을 달성" 패턴
    /([가-힣\s]{2,15})[을를]\s*달성/g,
    
    // 콜론(:) 뒤의 중요 내용 (20자 이내)
    /:\s*([가-힣\s]{3,20})/g,
  ];
  
  let result = text;
  
  // 먼저 줄바꿈을 br 태그로 변환
  result = result.replace(/\n/g, '<br/>');
  
  // 각 섹션당 하나의 중요 문장에만 밑줄 (볼드 제거, 밑줄만)
  // 중요한 핵심 키워드만 선별
  const criticalKeywords = [
    '핵심 메시지', '목표 시청자', '기획 의도', '핵심 전략', '성공 요인',
    '핵심 포인트', '주요 포인트', '가장 중요한', '결정적인', '필수적인',
    '차별점', '강점', '특징', '효과', '조회수', '참여도'
  ];
  
  // 중요 키워드만 밑줄 (font-semibold 제거)
  criticalKeywords.forEach(keyword => {
    const escapedKeyword = keyword.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    const regex = new RegExp(`(?![^<]*>)(${escapedKeyword})(?![^<]*</)`, 'gi');
    
    result = result.replace(regex, (match) => {
      return `<span class="underline decoration-2 decoration-orange-400 underline-offset-4">${match}</span>`;
    });
  });
  
  return result;
};

// ReactMarkdown에서 사용할 수 있도록 HTML을 렌더링하는 컴포넌트
export const HighlightedText: React.FC<{ text: string }> = ({ text }) => {
  const highlightedText = highlightImportantText(text);
  return <span dangerouslySetInnerHTML={{ __html: highlightedText }} />;
};
